name: Deploy main branch

on:
  push:
    branches:
      - 'main'

jobs:
  deploy:
    name: deploy
    runs-on: ubuntu-latest
    if: ${{ !contains(github.event.pull_request.labels.*.name, 'skip_ci') }} || github.event.pull_request.draft == false
    strategy:
      matrix:
        node-version: [ 12.x ]
    steps:
      - uses: actions/checkout@v2

      - uses: dorny/paths-filter@v2
        id: filter
        with:
          filters: |
            models:
              - 'models/**'
            services:
              - 'services/**'

      - name: Changes in "models"
        if: steps.filter.outputs.models == 'true'
        run: |
          echo "Changes in models/"

      - name: Changes in "services"
        if: steps.filter.outputs.services == 'true'
        run: |
          echo "Changes in services/"

      - name: Use NodeJS ${{ matrix.node-version }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node-version }}

      - name: Create env file
        run: |
          cat > .env << EOF
          ${{ secrets.DB_ENV }}
          EOF

      - name: Install dependencies
        if: steps.filter.outputs.models == 'false'
        run: yarn install --frozen-lockfile

      - name: Serverless deploy
        if: steps.filter.outputs.models == 'false'
        uses: serverless/github-action@master
        with:
          args: deploy -- prod
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
